//#############################################
//## file: Parser.java
//## Generated by Byacc/j
//#############################################
package compiler;

/**
 * BYACC/J Semantic Value for parser: Parser
 * This class provides some of the functionality
 * of the yacc/C 'union' directive
 */
public class ParserVal {

    public ParserValType type;

    public Integer ival;

    public Double dval;

    public String sval;

    public Object obj;

    public Boolean bval;

    public ParserVal() {
    }

    public ParserVal(int val) {
        ival = val;
        type = ParserValType.INT;
    }

    public ParserVal(double val) {
        dval = val;
        type = ParserValType.DOUBLE;
    }

    public ParserVal(String val) {
        sval = val;
    }

    public ParserVal(Object val) {
        obj = val;
    }

    public ParserVal(Boolean val) {
        bval = val;
        type = ParserValType.BOOL;
    }

    public ParserVal(ParserValType val) {
        type = val;
        switch (val)
        {
            case BOOL -> bval = false;
            case INT -> ival = 0;
            case DOUBLE -> dval = 0.0;
        }
    }

    public String toString() {
        if (type == ParserValType.BOOL)
            return bval.toString();
        if (type == ParserValType.DOUBLE)
            return dval.toString();
        if (type == ParserValType.INT)
            return ival.toString();

        throw new IllegalStateException("Unsupported types");
    }

}

