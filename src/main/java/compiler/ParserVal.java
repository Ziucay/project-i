//#############################################
//## file: Parser.java
//## Generated by Byacc/j
//#############################################
package compiler;

/**
 * BYACC/J Semantic Value for parser: Parser
 * This class provides some of the functionality
 * of the yacc/C 'union' directive
 */
public class ParserVal {

    enum ParserValType {
        INT,
        DOUBLE,
        BOOL
    }

    public ParserValType type;

    /**
     * integer value of this 'union'
     */
    public Integer ival;

    /**
     * double value of this 'union'
     */
    public Double dval;

    /**
     * string value of this 'union'
     */
    public String sval;

    /**
     * object value of this 'union'
     */
    public Object obj;

    /**
     * object value of this 'union'
     */
    public Boolean bval;

//#############################################
//## C O N S T R U C T O R S
//#############################################

    /**
     * Initialize me without a value
     */
    public ParserVal() {
    }

    /**
     * Initialize me as an int
     */
    public ParserVal(int val) {
        ival = val;
        type = ParserValType.INT;
    }

    /**
     * Initialize me as a double
     */
    public ParserVal(double val) {
        dval = val;
        type = ParserValType.DOUBLE;
    }

    /**
     * Initialize me as a string
     */
    public ParserVal(String val) {
        sval = val;
    }

    /**
     * Initialize me as an Object
     */
    public ParserVal(Object val) {
        obj = val;
    }

    /**
     * Initialize me as an Object
     */
    public ParserVal(Boolean val) {
        bval = val;
        type = ParserValType.BOOL;
    }

    public String toString() {
        if (type == ParserValType.BOOL)
            return bval.toString();
        if (type == ParserValType.DOUBLE)
            return dval.toString();
        if (type == ParserValType.INT)
            return ival.toString();

        throw new IllegalStateException("Unsupported types");
    }

}
